#include <Adafruit_SSD1306.h>
#include <Wire.h>
#include <string.h>

// Include Header Files
#include "Globals.h"
#include "dinosaur.h"

// Drawing Bitmaps
static const unsigned char PROGMEM dude[] = {0x00,0x01,0xfe,0x00,0x00,0x00,0x07,0xff,0x80,0x00,0x00,0x0f,0xff,0xc0,0x00,0x00,0x0e,0x79,0xc0,0x00,0x00,0x1e,0x79,0xe0,0x00,0x00,0x1e,0x79,0xe0,0x00,0x00,0x1f,0xff,0xe0,0x00,0x00,0x1f,0xef,0xe0,0x00,0x00,0x1f,0xef,0xe0,0x00,0x00,0x1e,0xfd,0xe0,0x00,0x00,0x1e,0xfd,0xe0,0x00,0x00,0x0e,0x79,0xc0,0x00,0x00,0x0f,0x03,0xc0,0x00,0x00,0x07,0xff,0x00,0x00,0x00,0x03,0xff,0x00,0x00,0x00,0x00,0xfc,0x00,0x00,0x00,0x01,0xff,0x00,0x00,0x00,0x07,0xff,0x00,0x00,0x00,0x0f,0x7f,0x80,0x00,0x00,0x3e,0x7f,0xc0,0x00,0x00,0x3c,0x7d,0xe0,0x00,0x00,0xf8,0x7c,0xe0,0x00,0x03,0xf0,0x7c,0xf0,0x00,0x07,0xc0,0x7c,0x78,0x00,0x0f,0x00,0x7c,0x3c,0x00,0x1e,0x00,0x7c,0x1e,0x00,0x7c,0x00,0x7c,0x0f,0x00,0x78,0x00,0x7c,0x07,0xc0,0xf0,0x00,0x7c,0x03,0xc0,0xc0,0x00,0x7c,0x01,0xc0,0x80,0x00,0x7c,0x00,0xc0,0x00,0x00,0x7c,0x00,0x00,0x00,0x00,0x7c,0x00,0x00,0x00,0x00,0x7c,0x00,0x00,0x00,0x00,0x7c,0x00,0x00,0x00,0x00,0x7c,0x00,0x00,0x00,0x00,0x7c,0x00,0x00,0x00,0x00,0x7c,0x00,0x00,0x00,0x00,0x7c,0x00,0x00,0x00,0x00,0x7e,0x00,0x00,0x00,0x00,0xfe,0x00,0x00,0x00,0x01,0xe7,0x00,0x00,0x00,0x03,0xc3,0x00,0x00,0x00,0x03,0x83,0x80,0x00,0x00,0x07,0x03,0x80,0x00,0x00,0x0f,0x01,0xc0,0x00,0x00,0x1e,0x01,0xe0,0x00,0x00,0x3c,0x00,0xf0,0x00,0x00,0xf8,0x00,0xf0,0x00,0x01,0xf0,0x00,0x78,0x00,0x01,0xe0,0x00,0x78,0x00,0x01,0xc0,0x00,0x30,0x00};
// Function Prototypes
bool getInput();

// Variables
long timeMillis = 0;
float fps = 0;

Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

void setup() {
  display.begin(0x02, SCREEN_ADDRESS);

  pinMode(BUTTON, INPUT_PULLUP);

  display.clearDisplay();
  display.display();
}

void loop() {
  /*
  if (getInput()) {
    display.clearDisplay();
    display.drawLine(0, 62, 127, 62, 1);
    display.drawLine(0, 63, 127, 63, 1);

    timeMillis = millis();
    long frames = 0;
    for (int i = 0; i < 5; i++){
      
      for (int j = 0; j < 32; j++){
        display.drawBitmap(20 + j, 7, dude, 34, 52, 1);
        display.drawBitmap(8, 7, dude, 34, 52, 1);
        display.display();
        display.clearDisplay();
        frames++;
    }
      for (int j = 31; j > 0; j--){
        display.drawBitmap(20 + j, 7, dude, 34, 52, 1);
        display.drawBitmap(8, 7, dude, 34, 52, 1);
        display.display();
        display.clearDisplay();
        frames++;
    }
      display.clearDisplay();
    }
    timeMillis = millis() - timeMillis;
    fps = frames * 1000 / timeMillis;

    display.setTextWrap(false);

    display.setTextSize(1);      // Normal 1:1 pixel scale
    display.setTextColor(SSD1306_WHITE); // Draw white text
    display.cp437(true);         // Use full 256 char 'Code Page 437' font

    display.setCursor(18, 4);
    display.print(fps);

    display.setCursor(80, 4);
    display.print(timeMillis);

    display.display();
    delay(2000);

    
  }
  */

  delay(10);
}

// Functions

bool getInput() {
  return !digitalRead(BUTTON);
}
